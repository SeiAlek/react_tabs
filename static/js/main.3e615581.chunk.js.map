{"version":3,"sources":["Components/Tabs/Tab.js","Components/Tabs/TabContent.js","Components/Tabs/Tabs.js","App.js","index.js"],"names":["Tab","toggleTab","props","handleToggleTab","e","tab","this","id","title","selected","liClassName","linkClassName","className","href","onClick","React","PureComponent","TabContent","content","Tabs","selectingTab","preventDefault","setState","prevState","tabs","map","state","find","key","preparedTabs","i","App","ReactDOM","render","document","getElementById"],"mappings":"wOA0CeA,E,4MAtCbC,UAAY,EAAKC,MAAMD,U,EAEvBE,gBAAkB,SAAAC,GAAC,OAAI,EAAKH,UAAUG,EAAG,EAAKF,MAAMG,M,uDAE1C,IACAA,EAAQC,KAAKJ,MAAbG,IACAE,EAAwBF,EAAxBE,GAAIC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACbC,EAAcD,EAChB,kCACA,aAEEE,EAAgBF,EAClB,kCACA,aAEJ,OACE,wBAAIF,GAAIA,EAAIK,UAAWF,GACrB,uBACEG,KAAK,MACLD,UAAWD,EACXG,QAASR,KAAKH,iBAEbK,Q,GAvBOO,IAAMC,eCgBTC,E,uKAfH,IACAC,EAAYZ,KAAKJ,MAAjBgB,QAER,OACE,6BAASN,UAAU,iBAChBM,O,GANgBH,IAAMC,eC8DhBG,G,wDA1Db,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAORD,UAAY,SAACG,EAAGgB,GACdhB,EAAEiB,iBAEF,EAAKC,UAAS,SAACC,GAgBb,MAAO,CAAEC,KAfID,EAAUC,KAAKC,KAAI,SAACpB,GAC/B,OAAIe,EAAab,KAAOF,EAAIE,IAAOF,EAAII,SAInCW,EAAab,KAAOF,EAAIE,IAAMF,EAAII,SAC7BJ,EAGF,eACFA,EADL,CAEEI,UAAWJ,EAAII,WATRJ,UAXb,EAAKqB,MAAQ,CACXF,KAAK,YAAK,EAAKtB,MAAMsB,OAJN,E,qDA+BT,IAAD,OACCA,EAASlB,KAAKoB,MAAdF,KACFf,EAAWH,KAAKoB,MAAMF,KAAKG,MAAK,SAAAtB,GAAG,OAAIA,EAAII,YAEjD,OACE,6BAASG,UAAU,QACjB,wBAAIA,UAAU,cACXY,EAAKC,KAAI,SAAApB,GAAG,OACX,kBAAC,EAAD,CACEA,IAAKA,EACLJ,UAAW,EAAKA,UAChB2B,IAAKvB,EAAIE,SAIf,kBAAC,EAAeE,Q,GA/CLM,IAAMC,gBCcnBa,G,MAfO,CACX,CACErB,MAAO,QACPU,QAAS,eAEX,CACEV,MAAO,QACPU,QAAS,eAEX,CACEV,MAAO,QACPU,QAAS,gBAIaO,KAAI,SAACpB,EAAKyB,GAAN,sBACzBzB,EADyB,CAE5BE,GAAIuB,EAAI,EACRrB,SAAiB,IAANqB,QAUEC,EAPH,kBACV,oCACE,0CACA,kBAAC,EAAD,CAAMP,KAAMK,MCzBhBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3e615581.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends React.PureComponent {\n  toggleTab = this.props.toggleTab;\n\n  handleToggleTab = e => this.toggleTab(e, this.props.tab);\n\n  render() {\n    const { tab } = this.props;\n    const { id, title, selected } = tab;\n    const liClassName = selected\n      ? 'tabs__item tabs__item--selected'\n      : 'tabs__item';\n\n    const linkClassName = selected\n      ? 'tabs__link tabs__link--selected'\n      : 'tabs__link';\n\n    return (\n      <li id={id} className={liClassName}>\n        <a\n          href=\"./#\"\n          className={linkClassName}\n          onClick={this.handleToggleTab}\n        >\n          {title}\n        </a>\n      </li>\n    );\n  }\n}\n\nTab.propTypes = {\n  tab: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n  }).isRequired,\n  toggleTab: PropTypes.func.isRequired,\n};\n\nexport default Tab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TabContent extends React.PureComponent {\n  render() {\n    const { content } = this.props;\n\n    return (\n      <article className=\"tabs__content\">\n        {content}\n      </article>\n    );\n  }\n}\n\nTabContent.propTypes = {\n  content: PropTypes.string.isRequired,\n};\n\nexport default TabContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from './Tab';\nimport TabContent from './TabContent';\nimport './Tabs.scss';\n\nclass Tabs extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabs: [...this.props.tabs],\n    };\n  }\n\n  toggleTab = (e, selectingTab) => {\n    e.preventDefault();\n\n    this.setState((prevState) => {\n      const tabs = prevState.tabs.map((tab) => {\n        if (selectingTab.id !== tab.id && !tab.selected) {\n          return tab;\n        }\n\n        if (selectingTab.id === tab.id && tab.selected) {\n          return tab;\n        }\n\n        return {\n          ...tab,\n          selected: !tab.selected,\n        };\n      });\n\n      return { tabs };\n    });\n  };\n\n  render() {\n    const { tabs } = this.state;\n    const selected = this.state.tabs.find(tab => tab.selected);\n\n    return (\n      <section className=\"tabs\">\n        <ul className=\"tabs__list\">\n          {tabs.map(tab => (\n            <Tab\n              tab={tab}\n              toggleTab={this.toggleTab}\n              key={tab.id}\n            />\n          ))}\n        </ul>\n        <TabContent {...selected} />\n      </section>\n    );\n  }\n}\n\nTabs.propTypes = {\n  tabs: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default Tabs;\n","import React from 'react';\nimport Tabs from './Components/Tabs/Tabs';\nimport './App.scss';\n\n// eslint-disable-next-line no-unused-vars\nconst tabs = [\n  {\n    title: 'Tab 1',\n    content: 'Some text 1',\n  },\n  {\n    title: 'Tab 2',\n    content: 'Some text 2',\n  },\n  {\n    title: 'Tab 3',\n    content: 'Some text 3',\n  },\n];\n\nconst preparedTabs = tabs.map((tab, i) => ({\n  ...tab,\n  id: i + 1,\n  selected: (i === 0),\n}));\n\nconst App = () => (\n  <>\n    <h1>React tabs</h1>\n    <Tabs tabs={preparedTabs} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}