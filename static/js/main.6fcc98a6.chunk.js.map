{"version":3,"sources":["Components/Tabs/Tab.js","Components/Tabs/TabContent.js","Components/Tabs/Tabs.js","App.js","index.js"],"names":["Tab","tab","activeTabId","selectTab","id","title","isSelected","className","ClassNames","type","onClick","TabContent","content","Tabs","props","setState","tabs","state","find","this","map","key","React","PureComponent","preparedTabs","i","App","ReactDOM","render","document","getElementById"],"mappings":"4RAqCeA,EAjCH,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UACvBC,EAAcH,EAAdG,GAAIC,EAAUJ,EAAVI,MAENC,EAAcF,IAAOF,EAE3B,OACE,wBACEE,GAAIA,EACJG,UAAWC,IACT,aACA,CAAE,uBAAwBF,KAG5B,4BACEG,KAAK,SACLF,UAAU,eACVG,QAdkB,kBAAMP,EAAUC,KAgBjCC,KCTMM,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,6BAASL,UAAU,iBAChBK,ICmDUC,G,wDAjDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRX,UAAY,SAACC,GACX,EAAKW,UAAS,WAAO,IACXC,EAAS,EAAKC,MAAdD,KAER,MAAO,CACLd,YAAaE,EACbQ,QAASI,EAAKE,MAAK,SAAAjB,GAAG,OAAIA,EAAIG,KAAOA,UAZzC,EAAKa,MAAQ,CACXf,YAAa,EAAKY,MAAME,KAAK,GAAGZ,GAChCY,KAAK,YAAK,EAAKF,MAAME,OALN,E,qDAoBT,IAAD,SACuBG,KAAKF,MAA3BD,EADD,EACCA,KAAMd,EADP,EACOA,YAEd,OACE,6BAASK,UAAU,QACjB,wBAAIA,UAAU,cACXS,EAAKI,KAAI,SAAAnB,GAAG,OACX,kBAAC,EAAD,CACEA,IAAKA,EACLC,YAAaA,EACbC,UAAW,EAAKA,UAChBkB,IAAKpB,EAAIG,SAIf,kBAAC,EACKY,EAAKE,MAAK,SAAAjB,GAAG,OAAIA,EAAIG,KAAOF,W,GArCvBoB,IAAMC,gBCcnBC,G,MAfO,CACX,CACEnB,MAAO,QACPO,QAAS,eAEX,CACEP,MAAO,QACPO,QAAS,eAEX,CACEP,MAAO,QACPO,QAAS,gBAIaQ,KAAI,SAACnB,EAAKwB,GAAN,sBACzBxB,EADyB,CAE5BG,GAAIqB,EAAI,QAUKC,EAPH,kBACV,oCACE,0CACA,kBAAC,EAAD,CAAMV,KAAMQ,MCxBhBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6fcc98a6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nconst Tab = ({ tab, activeTabId, selectTab }) => {\n  const { id, title } = tab;\n  const handleSelectTab = () => selectTab(id);\n  const isSelected = (id === activeTabId);\n\n  return (\n    <li\n      id={id}\n      className={ClassNames(\n        'tabs__item',\n        { 'tabs__item--selected': isSelected },\n      )}\n    >\n      <button\n        type=\"button\"\n        className=\"tabs__button\"\n        onClick={handleSelectTab}\n      >\n        {title}\n      </button>\n    </li>\n  );\n};\n\nTab.propTypes = {\n  tab: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  selectTab: PropTypes.func.isRequired,\n  activeTabId: PropTypes.number.isRequired,\n};\n\nexport default Tab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabContent = ({ content }) => (\n  <article className=\"tabs__content\">\n    {content}\n  </article>\n);\n\nTabContent.propTypes = {\n  content: PropTypes.string.isRequired,\n};\n\nexport default TabContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from './Tab';\nimport TabContent from './TabContent';\nimport './Tabs.scss';\n\nclass Tabs extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTabId: this.props.tabs[0].id,\n      tabs: [...this.props.tabs],\n    };\n  }\n\n  selectTab = (id) => {\n    this.setState(() => {\n      const { tabs } = this.state;\n\n      return {\n        activeTabId: id,\n        content: tabs.find(tab => tab.id === id),\n      };\n    });\n  };\n\n  render() {\n    const { tabs, activeTabId } = this.state;\n\n    return (\n      <section className=\"tabs\">\n        <ul className=\"tabs__list\">\n          {tabs.map(tab => (\n            <Tab\n              tab={tab}\n              activeTabId={activeTabId}\n              selectTab={this.selectTab}\n              key={tab.id}\n            />\n          ))}\n        </ul>\n        <TabContent\n          {...tabs.find(tab => tab.id === activeTabId)}\n        />\n      </section>\n    );\n  }\n}\n\nTabs.propTypes = {\n  tabs: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default Tabs;\n","import React from 'react';\nimport Tabs from './Components/Tabs/Tabs';\nimport './App.scss';\n\n// eslint-disable-next-line no-unused-vars\nconst tabs = [\n  {\n    title: 'Tab 1',\n    content: 'Some text 1',\n  },\n  {\n    title: 'Tab 2',\n    content: 'Some text 2',\n  },\n  {\n    title: 'Tab 3',\n    content: 'Some text 3',\n  },\n];\n\nconst preparedTabs = tabs.map((tab, i) => ({\n  ...tab,\n  id: i + 1,\n}));\n\nconst App = () => (\n  <>\n    <h1>React tabs</h1>\n    <Tabs tabs={preparedTabs} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}