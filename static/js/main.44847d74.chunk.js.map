{"version":3,"sources":["Components/Tabs/Tab.js","Components/Tabs/TabContent.js","Components/Tabs/Tabs.js","App.js","index.js"],"names":["Tab","this","props","tab","toggleTabs","id","title","liClassName","selected","className","href","onClick","e","React","PureComponent","TabContent","children","Tabs","selectingTab","preventDefault","setState","prevState","tabs","map","state","key","content","preparedTabs","i","App","ReactDOM","render","document","getElementById"],"mappings":"wOAkCeA,E,uKA9BH,IAAD,SACqBC,KAAKC,MAAzBC,EADD,EACCA,IAAKC,EADN,EACMA,WACLC,EAAwBF,EAAxBE,GAAIC,EAAoBH,EAApBG,MACNC,EAD0BJ,EAAbK,SAEf,kCACA,aAEJ,OACE,wBAAIH,GAAIA,EAAII,UAAWF,GACrB,uBACEG,KAAK,MACLD,UAAU,aACVE,QAAS,SAAAC,GAAC,OAAIR,EAAWQ,EAAG,EAAKV,MAAMC,OAEtCG,Q,GAfOO,IAAMC,eCUTC,E,uKARX,OAAOd,KAAKC,MAAMc,a,GAFGH,IAAMC,eCsEhBG,G,wDAlEb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAORE,WAAa,SAACQ,EAAGM,GACfN,EAAEO,iBAEF,EAAKC,UAAS,SAACC,GAgBb,MAAO,CAAEC,KAfID,EAAUC,KAAKC,KAAI,SAACpB,GAC/B,OAAIe,EAAab,KAAOF,EAAIE,IAAOF,EAAIK,SAInCU,EAAab,KAAOF,EAAIE,IAAMF,EAAIK,SAC7BL,EAGF,eACFA,EADL,CAEEK,UAAWL,EAAIK,WATRL,UAXb,EAAKqB,MAAQ,CACXF,KAAK,YAAK,EAAKpB,MAAMoB,OAJN,E,qDA+BT,IAAD,OACCA,EAASrB,KAAKuB,MAAdF,KAER,OACE,6BAASb,UAAU,QAEjB,wBAAIA,UAAU,cACXa,EAAKC,KAAI,SAAApB,GAAG,OACX,kBAAC,EAAD,CACEA,IAAKA,EACLC,WAAY,EAAKA,WACjBqB,IAAKtB,EAAIE,SAKf,6BAASI,UAAU,iBAChBR,KAAKuB,MAAMF,KAAKC,KAAI,SAAApB,GAAG,OACtB,kBAAC,EAAD,iBAAgBA,EAAhB,CAAqBsB,IAAKtB,EAAIE,KAC1BF,EAAIK,SAAWL,EAAIuB,QAAU,a,GAnD1Bb,IAAMC,gBCcnBa,G,MAfO,CACX,CACErB,MAAO,QACPoB,QAAS,eAEX,CACEpB,MAAO,QACPoB,QAAS,eAEX,CACEpB,MAAO,QACPoB,QAAS,gBAIaH,KAAI,SAACpB,EAAKyB,GAAN,sBACzBzB,EADyB,CAE5BE,GAAIuB,EAAI,EACRpB,SAAiB,IAANoB,QAUEC,EAPH,kBACV,oCACE,0CACA,kBAAC,EAAD,CAAMP,KAAMK,MCzBhBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.44847d74.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends React.PureComponent {\n  render() {\n    const { tab, toggleTabs } = this.props;\n    const { id, title, selected } = tab;\n    const liClassName = selected\n      ? 'tabs__item tabs__item--selected'\n      : 'tabs__item';\n\n    return (\n      <li id={id} className={liClassName}>\n        <a\n          href=\"./#\"\n          className=\"tabs__link\"\n          onClick={e => toggleTabs(e, this.props.tab)}\n        >\n          {title}\n        </a>\n      </li>\n    );\n  }\n}\n\nTab.propTypes = {\n  tab: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    selected: PropTypes.bool.isRequired,\n  }).isRequired,\n  toggleTabs: PropTypes.func.isRequired,\n};\n\nexport default Tab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TabContent extends React.PureComponent {\n  render() {\n    return this.props.children;\n  }\n}\n\nTabContent.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\nexport default TabContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from './Tab';\nimport TabContent from './TabContent';\nimport './Tabs.scss';\n\nclass Tabs extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabs: [...this.props.tabs],\n    };\n  }\n\n  toggleTabs = (e, selectingTab) => {\n    e.preventDefault();\n\n    this.setState((prevState) => {\n      const tabs = prevState.tabs.map((tab) => {\n        if (selectingTab.id !== tab.id && !tab.selected) {\n          return tab;\n        }\n\n        if (selectingTab.id === tab.id && tab.selected) {\n          return tab;\n        }\n\n        return {\n          ...tab,\n          selected: !tab.selected,\n        };\n      });\n\n      return { tabs };\n    });\n  };\n\n  render() {\n    const { tabs } = this.state;\n\n    return (\n      <section className=\"tabs\">\n\n        <ul className=\"tabs__list\">\n          {tabs.map(tab => (\n            <Tab\n              tab={tab}\n              toggleTabs={this.toggleTabs}\n              key={tab.id}\n            />\n          ))}\n        </ul>\n\n        <article className=\"tabs__content\">\n          {this.state.tabs.map(tab => (\n            <TabContent {...tab} key={tab.id}>\n              {(tab.selected ? tab.content : '')}\n            </TabContent>\n          ))}\n        </article>\n\n      </section>\n    );\n  }\n}\n\nTabs.propTypes = {\n  tabs: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n\nexport default Tabs;\n","import React from 'react';\nimport Tabs from './Components/Tabs/Tabs';\nimport './App.scss';\n\n// eslint-disable-next-line no-unused-vars\nconst tabs = [\n  {\n    title: 'Tab 1',\n    content: 'Some text 1',\n  },\n  {\n    title: 'Tab 2',\n    content: 'Some text 2',\n  },\n  {\n    title: 'Tab 3',\n    content: 'Some text 3',\n  },\n];\n\nconst preparedTabs = tabs.map((tab, i) => ({\n  ...tab,\n  id: i + 1,\n  selected: (i === 0),\n}));\n\nconst App = () => (\n  <>\n    <h1>React tabs</h1>\n    <Tabs tabs={preparedTabs} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}